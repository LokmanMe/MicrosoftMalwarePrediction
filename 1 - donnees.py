import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


dtypes = {
        'MachineIdentifier':                                    'category',
        'ProductName':                                          'category',
        'EngineVersion':                                        'category',
        'AppVersion':                                           'category',
        'AvSigVersion':                                         'category',
        'IsBeta':                                               'int8',
        'RtpStateBitfield':                                     'float16',
        'IsSxsPassiveMode':                                     'int8',
        'DefaultBrowsersIdentifier':                            'float16',
        'AVProductStatesIdentifier':                            'float32',
        'AVProductsInstalled':                                  'float16',
        'AVProductsEnabled':                                    'float16',
        'HasTpm':                                               'int8',
        'CountryIdentifier':                                    'int16',
        'CityIdentifier':                                       'float32',
        'OrganizationIdentifier':                               'float16',
        'GeoNameIdentifier':                                    'float16',
        'LocaleEnglishNameIdentifier':                          'int8',
        'Platform':                                             'category',
        'Processor':                                            'category',
        'OsVer':                                                'category',
        'OsBuild':                                              'int16',
        'OsSuite':                                              'int16',
        'OsPlatformSubRelease':                                 'category',
        'OsBuildLab':                                           'category',
        'SkuEdition':                                           'category',
        'IsProtected':                                          'float16',
        'AutoSampleOptIn':                                      'int8',
        'PuaMode':                                              'category',
        'SMode':                                                'float16',
        'IeVerIdentifier':                                      'float16',
        'SmartScreen':                                          'category',
        'Firewall':                                             'float16',
        'UacLuaenable':                                         'float32',
        'Census_MDC2FormFactor':                                'category',
        'Census_DeviceFamily':                                  'category',
        'Census_OEMNameIdentifier':                             'float16',
        'Census_OEMModelIdentifier':                            'float32',
        'Census_ProcessorCoreCount':                            'float16',
        'Census_ProcessorManufacturerIdentifier':               'float16',
        'Census_ProcessorModelIdentifier':                      'float16',
        'Census_ProcessorClass':                                'category',
        'Census_PrimaryDiskTotalCapacity':                      'float32',
        'Census_PrimaryDiskTypeName':                           'category',
        'Census_SystemVolumeTotalCapacity':                     'float32',
        'Census_HasOpticalDiskDrive':                           'int8',
        'Census_TotalPhysicalRAM':                              'float32',
        'Census_ChassisTypeName':                               'category',
        'Census_InternalPrimaryDiagonalDisplaySizeInInches':    'float16',
        'Census_InternalPrimaryDisplayResolutionHorizontal':    'float16',
        'Census_InternalPrimaryDisplayResolutionVertical':      'float16',
        'Census_PowerPlatformRoleName':                         'category',
        'Census_InternalBatteryType':                           'category',
        'Census_InternalBatteryNumberOfCharges':                'float32',
        'Census_OSVersion':                                     'category',
        'Census_OSArchitecture':                                'category',
        'Census_OSBranch':                                      'category',
        'Census_OSBuildNumber':                                 'int16',
        'Census_OSBuildRevision':                               'int32',
        'Census_OSEdition':                                     'category',
        'Census_OSSkuName':                                     'category',
        'Census_OSInstallTypeName':                             'category',
        'Census_OSInstallLanguageIdentifier':                   'float16',
        'Census_OSUILocaleIdentifier':                          'int16',
        'Census_OSWUAutoUpdateOptionsName':                     'category',
        'Census_IsPortableOperatingSystem':                     'int8',
        'Census_GenuineStateName':                              'category',
        'Census_ActivationChannel':                             'category',
        'Census_IsFlightingInternal':                           'float16',
        'Census_IsFlightsDisabled':                             'float16',
        'Census_FlightRing':                                    'category',
        'Census_ThresholdOptIn':                                'float16',
        'Census_FirmwareManufacturerIdentifier':                'float16',
        'Census_FirmwareVersionIdentifier':                     'float32',
        'Census_IsSecureBootEnabled':                           'int8',
        'Census_IsWIMBootEnabled':                              'float16',
        'Census_IsVirtualDevice':                               'float16',
        'Census_IsTouchEnabled':                                'int8',
        'Census_IsPenCapable':                                  'int8',
        'Census_IsAlwaysOnAlwaysConnectedCapable':              'float16',
        'Wdft_IsGamer':                                         'float16',
        'Wdft_RegionIdentifier':                                'float16',
        'HasDetections':                                        'int8'
        }

# Table de données entière : 
%time train = pd.read_csv("data/train.csv", dtype=dtypes)
## Wall time: 13min 46s

#train = pd.read_csv("data/train.csv", nrows=10)
#trainNP = df.values

%time train.info()

fig, ax = plt.subplots()
train['HasDetections'].value_counts().plot.bar(color=['darkblue', 'darkred'])
ax.set_xticklabels(['No malware detection', 'Has malware detection'])
plt.title('HasDetections(target)')
plt.show()

# Données manquantes
(train.isnull().sum()/train.shape[0]).sort_values(ascending=False)

train.drop(['PuaMode', 'Census_ProcessorClass', 'DefaultBrowsersIdentifier', 'Census_IsFlightingInternal', 
            'Census_InternalBatteryType', 'Census_ThresholdOptIn', 'Census_IsWIMBootEnabled'], axis=1, inplace=True)


# Données asymétriques
pd.options.display.float_format = '{:,.4f}'.format
sk_df = pd.DataFrame([{'column': c, 'uniq': train[c].nunique(), 'skewness': train[c].value_counts(normalize=True).values[0] * 100} for c in train.columns])
sk_df = sk_df.sort_values('skewness', ascending=False)
sk_df

train['IsBeta'].value_counts()

train.drop(['IsBeta', 'Census_IsFlightsDisabled', 'AutoSampleOptIn', 'SMode', 'Census_IsPortableOperatingSystem', 
            'Census_DeviceFamily', 'UacLuaenable', 'Census_IsVirtualDevice'], axis=1, inplace=True)


train['Processor'].value_counts()
train['Census_OSArchitecture'].value_counts()

# Données corrélées (42 variables)
plt.figure(figsize=(100,100), dpi=75)
sns.heatmap(train.corr(), cmap='RdBu_r', annot=True, center=0.0)
plt.title('Correlation')
plt.show()

print(train.RtpStateBitfield.nunique())
print(train.IsSxsPassiveMode.nunique())

print(train.Census_ProcessorManufacturerIdentifier.nunique())
print(train.Census_ProcessorModelIdentifier.nunique())

print(train.OsBuild.nunique())
print(train.Census_OSBuildNumber.nunique())

print(train.Census_OSInstallLanguageIdentifier.nunique())
print(train.Census_OSUILocaleIdentifier.nunique())

train.drop(['RtpStateBitfield', 'Census_ProcessorModelIdentifier', 'Census_OSBuildNumber', 'Census_OSUILocaleIdentifier'], axis=1, inplace=True)

# Corrélations avec HasDetection
corr_matrix = train.corr()
corr_matrix['HasDetections'].sort_values(ascending = False)

train.drop(['IeVerIdentifier', 'Census_SystemVolumeTotalCapacity', 'Census_InternalPrimaryDisplayResolutionVertical', 
            'CountryIdentifier', 'Census_ProcessorManufacturerIdentifier', 'HasTpm', 'GeoNameIdentifier', 'OrganizationIdentifier', 
            'Firewall', 'Census_OSInstallLanguageIdentifier', 'Census_PrimaryDiskTotalCapacity', 'Census_IsSecureBootEnabled', 
            'Census_FirmwareVersionIdentifier', 'CityIdentifier', 'Census_OEMModelIdentifier', 'Census_OSBuildRevision', 
            'LocaleEnglishNameIdentifier', 'Census_OEMNameIdentifier', 'Census_IsPenCapable'
            ], axis=1, inplace=True)

data_corr = train[['AVProductsInstalled', 'AVProductStatesIdentifier', 'Census_IsAlwaysOnAlwaysConnectedCapable', 
                  'IsProtected', 'Census_TotalPhysicalRAM',	'Census_ProcessorCoreCount', 'Wdft_IsGamer', 'HasDetections']]






















